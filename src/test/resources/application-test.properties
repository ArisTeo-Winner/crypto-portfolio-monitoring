# Configuración para H2
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Hibernate auto DDL
spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.data.redis.host=${REDIS_HOST_LOCAL}
spring.data.redis.port=${REDIS_PORT_LOCAL}
#spring.data.redis.client-name=cryptomonitor   # <- útil para "CLIENT LIST"

spring.cache.type=simple

# Disable automatic execution of schema.sql and data.sql
spring.sql.init.mode=never


##spring.test.database.replace=none

# Show SQL in console (opcional para debug)
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

##logging.level.org.hibernate.SQL=DEBUG

# H2 console (opcional)
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

API_COINMARKETCAP_BASE_URL=${API_COINMARKETCAP_BASE_URL}
API_COINMARKETCAP_API_KEY=${COINMARKETCAP_API_KEY}
API_ALPHAVANTAGE_BASE_URL=${API_ALPHAVANTAGE_BASE_URL}
API_ALPHAVANTAGE_API_KEY=${ALPHAVANTAGE_API_KEY}

polygon.api.key=${POLYGON_API_KEY}


# 1) Cache interceptor de Spring (cache-aside)
#logging.level.org.springframework.cache.interceptor.CacheInterceptor=TRACE

# 2) Abstracción de caché de Spring
#logging.level.org.springframework.cache=TRACE

# 3) Infraestructura Redis Cache (opcionalmente DEBUG para más detalle)
#logging.level.org.springframework.data.redis.cache=DEBUG



